name: TEP CI-Workflow

on:
  #pull_request:
  #  branches: [ master ]
  push:
    
    
jobs:
  Build:
    runs-on: ubuntu-latest
    services:
      sqlServer:
        image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
        env:
          ACCEPT_EULA: y
          SA_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MSSQL_PID: Express
        ports:
          - 1433:1433
    env:
      ConnectionStringTep: ${{ secrets.CONECTION_STRING }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install Dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Tests and Coverage   
      # All TEST (only) projects MUST add package coverlet.msbuild for Coverage
      run: dotnet test --no-restore --verbosity minimal /p:CollectCoverage=true /p:MergeWith=$(pwd)/coverage/coverage.json /p:CoverletOutput=$(pwd)/coverage/ "/p:CoverletOutputFormat=\"json,lcov\""
    - name: Artifact Test Coverage
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage
        path: /home/runner/work/TrainingEvaluationPlatform/TrainingEvaluationPlatform/coverage/coverage.json


    #- name: Publish
    #  run: dotnet publish --configuration Release --no-restore -o ./output/


    #- name: deploy to azure web app
    #  uses: azure/webapps-deploy@v2
    #  with: 
    #    app-name: tepvr
    #    publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
    #    package: ./output/


    #- name: Publish Build Artifact
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: aspnetcore-webapp
    #    path: ./output/
    # CODE COVERAGE as Artifact 
    # CODE COVERAGE TO View Tool 

    - name: Build with dotnet
      run: dotnet build --configuration Release

    - name: dotnet publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v1
      with:
        app-name: 'tepvr'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_0565be1920b84b7bb3690ec77cede0e5 }}
        package: ${{env.DOTNET_ROOT}}/myapp 